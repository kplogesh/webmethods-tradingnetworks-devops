pipeline {
    agent any 
    environment {
        git_dev_branch_name = 'develop'
        //git_pat = credentials('git-pat')
        dev_namespace= 'development'
        stg_namespace= 'staging'
        dev_env_name = 'development'
        stg_env_name = 'staging'   
        MAJOR = sh(script: "sed -n 's/^MAJOR=\\(.*\\)/\\1/p' < applications/tradingnetworks/version.txt", returnStdout: true)
        MINOR = sh(script: "sed -n 's/^MINOR=\\(.*\\)/\\1/p' < applications/tradingnetworks/version.txt", returnStdout: true)
        PATCH = sh(script: "sed -n 's/^PATCH=\\(.*\\)/\\1/p' < applications/tradingnetworks/version.txt", returnStdout: true)
        VERSION = 'v'+'${MAJOR}.trim()'+'.'+'${MINOR}'+'.'+'${PATCH}'  

    }    
    stages {
        stage('DEV DB Export') {             
            steps {
                sh "chmod +x -R ${env.WORKSPACE}"
                sh "echo major version is ${VERSION}"
                withCredentials([file(credentialsId: 'vadigcs62496k8s', variable: 'KUBECONFIG')]) 
                {
                    sh 'pipeline/common.lib/export-task.sh ${BUILD_NUMBER} ${dev_env_name} ${dev_namespace} ${git_dev_branch_name}'
                }
            }
        }                    
        stage('STG DB Import') {          
            steps {
                withCredentials([file(credentialsId: 'vadigcs62496-staging', variable: 'KUBECONFIG')]) 
                {
                    sh 'pipeline/common.lib/import-task.sh ${BUILD_NUMBER} ${stg_env_name} ${stg_namespace}'
                }
            }
        }
        stage('Build') {         
            steps {
                sh 'pipeline/common.lib/build-task.sh ${BUILD_NUMBER}'
            }
        }         
        stage('STG Deploy') {         
            steps {
                withCredentials([file(credentialsId: 'vadigcs62496-staging', variable: 'KUBECONFIG')]) 
                {
                    sh 'pipeline/common.lib/deploy-task.sh ${BUILD_NUMBER} ${stg_env_name} ${stg_namespace}'
                }
            }
        }
        stage('STG Tests') {         
            steps {
                sh 'pipeline/common.lib/tests-task.sh'
            }
        }         
        stage('Tag & Release') {         
            steps {
                sh 'pipeline/common.lib/tag-release-task.sh ${BUILD_NUMBER}'
            }
        }                              
    }
    post { 
        always { 
            cleanWs()
        }
    }       
}