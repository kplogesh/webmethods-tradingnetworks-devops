pipeline {
    agent any 
    stages {
        stage('DEV - TN Export Task - K8S') 
        { 
            steps 
            {
                sh "chmod +x -R ${env.WORKSPACE}"
                withCredentials([file(credentialsId: 'vadigcs62496k8s', variable: 'KUBECONFIG')]) 
                {
                    sh 'pipeline/common.lib/export-task.sh ${BUILD_NUMBER} development develop'
                }
            }
        }             
        stage('Github - Push') 
        { 
            steps 
            {
                sh 'content=$(base64 --wrap=0 applications/tradingnetworks/sourcecode/tn-assets/ExportedData-${BUILD_NUMBER}.zip)'
                sh '''
                    # Push to Repository
                    # use base64 to encode binary data and -w0 all in one-line stream                   
                    message="Commit from Jenkins task"
                    committer_name="Jenkins"
                    committer_email="jenkins@jenkins.com"
                    branch=$2
                    # Form the JSON String payload for Github push
                    JSON_STRING="{
                    \"message\":\"${message}\",
                    \"committer\":{\"name\":\"${committer_name}\",\"email\":\"${committer_email}\"},
                    \"content\":\"${content}\",
                    \"branch\":\"${branch}\"
                    }"
                    # Commit the exported content in Github
                    echo ${JSON_STRING} |
                    curl -X PUT -H "Accept: application/vnd.github+json" -H "Content-Type: application/json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer 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" --url https://api.github.com/repos/kplogesh/webmethods-tradingnetworks-devops/contents/applications/tradingnetworks/sourcecode/tn-assets/ExportedData-$1.zip --data-binary @-
                '''
            }
        }          
        stage('Staging - TN Import Job - K8S') 
        { 
            steps 
            {
                sh 'unzip ExportedData-${BUILD_NUMBER}.zip'
                withCredentials([file(credentialsId: 'vadigcs62496-staging', variable: 'KUBECONFIG')]) 
                {
                    sh 'pipeline/common.lib/import-task.sh ${BUILD_NUMBER} staging staging'
                }
            }
        }
        stage('Build Application Image') 
        { 
            steps 
            {
                sh 'pipeline/common.lib/build.sh ${BUILD_NUMBER}'
            }
        }         
        stage('Staging - Deploy MSR - K8S') { 
            steps 
            {
                withCredentials([file(credentialsId: 'vadigcs62496-staging', variable: 'KUBECONFIG')]) 
                {
                    sh 'pipeline/common.lib/deploy.sh ${BUILD_NUMBER} staging staging'
                }
            }
        }    
    }
    
}